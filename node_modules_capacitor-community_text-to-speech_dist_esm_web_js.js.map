{"version":3,"file":"node_modules_capacitor-community_text-to-speech_dist_esm_web_js.js","mappings":"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","sources":["./node_modules/@capacitor-community/text-to-speech/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class TextToSpeechWeb extends WebPlugin {\r\n    constructor() {\r\n        super();\r\n        this.speechSynthesis = null;\r\n        if ('speechSynthesis' in window) {\r\n            this.speechSynthesis = window.speechSynthesis;\r\n            window.addEventListener('beforeunload', () => {\r\n                this.stop();\r\n            });\r\n        }\r\n    }\r\n    async speak(options) {\r\n        if (!this.speechSynthesis) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        await this.stop();\r\n        const speechSynthesis = this.speechSynthesis;\r\n        const utterance = this.createSpeechSynthesisUtterance(options);\r\n        return new Promise((resolve, reject) => {\r\n            utterance.onend = () => {\r\n                resolve();\r\n            };\r\n            utterance.onerror = (event) => {\r\n                reject(event);\r\n            };\r\n            speechSynthesis.speak(utterance);\r\n        });\r\n    }\r\n    async stop() {\r\n        if (!this.speechSynthesis) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        this.speechSynthesis.cancel();\r\n    }\r\n    async getSupportedLanguages() {\r\n        const voices = this.getSpeechSynthesisVoices();\r\n        const languages = voices.map(voice => voice.lang);\r\n        const filteredLanguages = languages.filter((v, i, a) => a.indexOf(v) == i);\r\n        return { languages: filteredLanguages };\r\n    }\r\n    async getSupportedVoices() {\r\n        const voices = this.getSpeechSynthesisVoices();\r\n        return { voices };\r\n    }\r\n    async isLanguageSupported(options) {\r\n        const result = await this.getSupportedLanguages();\r\n        const isLanguageSupported = result.languages.includes(options.lang);\r\n        return { supported: isLanguageSupported };\r\n    }\r\n    async openInstall() {\r\n        this.throwUnimplementedError();\r\n    }\r\n    createSpeechSynthesisUtterance(options) {\r\n        const voices = this.getSpeechSynthesisVoices();\r\n        const utterance = new SpeechSynthesisUtterance();\r\n        const { text, lang, rate, pitch, volume, voice } = options;\r\n        if (voice) {\r\n            utterance.voice = voices[voice];\r\n        }\r\n        if (volume) {\r\n            utterance.volume = volume >= 0 && volume <= 1 ? volume : 1;\r\n        }\r\n        if (rate) {\r\n            utterance.rate = rate >= 0.1 && rate <= 10 ? rate : 1;\r\n        }\r\n        if (pitch) {\r\n            utterance.pitch = pitch >= 0 && pitch <= 2 ? pitch : 2;\r\n        }\r\n        if (lang) {\r\n            utterance.lang = lang;\r\n        }\r\n        utterance.text = text;\r\n        return utterance;\r\n    }\r\n    getSpeechSynthesisVoices() {\r\n        if (!this.speechSynthesis) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        if (!this.supportedVoices || this.supportedVoices.length < 1) {\r\n            this.supportedVoices = this.speechSynthesis.getVoices();\r\n        }\r\n        return this.supportedVoices;\r\n    }\r\n    throwUnsupportedError() {\r\n        throw this.unavailable('SpeechSynthesis API not available in this browser.');\r\n    }\r\n    throwUnimplementedError() {\r\n        throw this.unimplemented('Not implemented on web.');\r\n    }\r\n}\r\n"],"names":["WebPlugin","TextToSpeechWeb","constructor","speechSynthesis","window","addEventListener","stop","speak","options","throwUnsupportedError","utterance","createSpeechSynthesisUtterance","Promise","resolve","reject","onend","onerror","event","cancel","getSupportedLanguages","voices","getSpeechSynthesisVoices","languages","map","voice","lang","filteredLanguages","filter","v","i","a","indexOf","getSupportedVoices","isLanguageSupported","result","includes","supported","openInstall","throwUnimplementedError","SpeechSynthesisUtterance","text","rate","pitch","volume","supportedVoices","length","getVoices","unavailable","unimplemented"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}